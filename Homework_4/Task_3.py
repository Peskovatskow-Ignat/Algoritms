"""
Сложность данного алгоритма - O(n), где n - кол-во чиссел.
"""

def tribonacci(n):
    if n == 0:
        return 0
    elif n == 1 or n == 2:
        return 1

    first, second, three = 0, 1, 1  # a, b, c - значениями первых трех элементов последовательности
    curr = 3  # текущий индекс - 3

    while curr <= n:  # Цикл выполняется до достижения текущего индекса значения n
        first, second, three = second, three, first + second + three  # Обновляем значения переменных a, b, c
        curr +=1
    answer = three 
    return answer


"""Если n больше 2, то мы инициализируем переменные a, b и c с первыми тремя числами последовательности Трибоначчи.
Затем у нас есть цикл while, который выполняется, пока текущий индекс curr не достигнет значения n.
На каждой итерации мы вычисляем следующее число в последовательности Трибоначчи путем обновления значений переменных a, b и c.
Значение a становится равным b, значение b становится равным c, а значение c становится равным сумме трех предыдущих чисел (a + b + c).
После этого мы увеличиваем текущий индекс curr на 1."""