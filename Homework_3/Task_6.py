"""
Сложность данного алгоритма - O(n), где n - количество элементов в связном списке
"""
class ListNode:
    def __init__(self, x):
        self.val = x
        self.next = None

# Определение класса Solution для проверки наличия цикла в связном списке
class Solution:
    def hasCycle(self, head) -> bool:
        # Используем два указателя - быстрый и медленный
        fast, slow = head, head
        # Используем цикл while для прохождения через список
        while fast and fast.next:
            # Двигаем быстрый указатель на две позиции
            fast = fast.next.next
            # Двигаем медленный указатель на одну позицию
            slow = slow.next
            # Если быстрый и медленный указатели указывают на один и тот же элемент,
            # то связный список имеет цикл
            if slow == fast:
                return True
        # Если проходим по всему списку и не находим цикл, значит его нет
        return False
